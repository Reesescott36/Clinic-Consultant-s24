#include "Wire.h"
#define I2C_DEV_ADDR 0x55
uint32_t i = 0;

//UART Pins
int RX2 = 16;
int TX2 = 17;

//Analog Test pins
int analogInPin = 36;
int dac = 25;

int error_counter = 0;

int ack = 23;
int step = 0;
int substep = 0;
char data_rcvd = '0';

int LED0 = 4;
int LED1 = 0;
int LED2 = 2;
int LED3 = 15;

void setup() {
  step = 0;
  Serial.begin(115200);
  Serial1.begin(115200, SERIAL_8N1, RX2, TX2);
  Serial.println("ATE Started");
  Serial.println("Serial started");
  Wire.begin();
  pinMode(ack,OUTPUT);
  digitalWrite(ack,LOW);

  pinMode(LED0,OUTPUT);
  pinMode(LED1,OUTPUT);
  pinMode(LED2,OUTPUT);
  pinMode(LED3,OUTPUT);

  digitalWrite(LED0,LOW);
  analogWrite(LED1,0);
  digitalWrite(LED2,LOW);
  digitalWrite(LED3,LOW);
  Serial.println();
  Serial.println("Beginning UART communication test");
}

void loop() {
  //UART Communication from subject
  if(Serial1.available()>0){
    //Serial.print("Serial1 available");
    data_rcvd = Serial1.read();
  }

  //UART Test
  if(step == 0){
    delay(100);
    Serial1.write('1');
    error_counter = error_counter + 1;
    //Serial.print("Serial1 '1' value sent");
    if(data_rcvd=='a'){
      step = 1;
      Serial.println("UART communication successfull!");
      Serial.print("number of tries: ");
      Serial.println(error_counter);
      digitalWrite(LED0,HIGH);
      error_counter = 0;
      Serial.println();
      Serial.println("Beginning analog read test");
    }
    if(error_counter == 100){
      Serial.println("UART communication failed, exiting test");
      step = 4;
    }
  }

  //Analog Read Test
  if(step==1) {
    if(substep == 0){
      dacWrite(dac,128);
      delay(100);
      error_counter = error_counter + 1;
      if(data_rcvd=='b')
      {
        substep = 1;
        Serial.println("Analog read test 1 successful");
        Serial.print("number of tries: ");
        Serial.println(error_counter);
        analogWrite(LED1,50);
        error_counter = 0;
      }
    }
    if(substep == 1){
      dacWrite(dac,64);
      delay(100);
      error_counter = error_counter + 1;
      if(data_rcvd=='c')
      {
        substep = 2;
        Serial.println("Analog read test 2 successful");
        Serial.print("number of tries: ");
        Serial.println(error_counter);
        analogWrite(LED1,100);
        error_counter = 0;
      }
    }
    if(substep == 2){
      dacWrite(dac,255);
      delay(100);
      error_counter = error_counter + 1;
      if(data_rcvd=='d')
      {
        step = 2;
        Serial.println("Analog read test 3 successful");
        Serial.print("number of tries: ");
        Serial.println(error_counter);
        substep = 0;
        analogWrite(LED1,200);
        Serial.println("Full analog read test successful!");
        error_counter = 0;
        Serial.println();
        Serial.println("starting I2C test");
      }
    }
    if(error_counter == 100){
      Serial.println("Analog read test failed, exiting test");
      step = 4;
    }
  }

  //I2C Test
  if(step == 2){
    error_counter = error_counter + 1;
    delay(1000);
    //Write message to the slave
    Wire.beginTransmission(I2C_DEV_ADDR);
    Wire.printf("Greetings!");
    uint8_t error = Wire.endTransmission(true);
    //Serial.printf("endTransmission: %u\n", error);
    if(error_counter == 10){
      Serial.println("I2C test failed, exiting test");
      step = 4;
    }
    //Read 16 bytes from the slave
    uint8_t bytesReceived = Wire.requestFrom(I2C_DEV_ADDR, 16);
    //Serial.printf("requestFrom: %u\n", bytesReceived);
    if((bool)bytesReceived){ //If received more than zero bytes
      uint8_t temp[bytesReceived];
      Wire.readBytes(temp, bytesReceived);
      //log_print_buf(temp, bytesReceived);
      step = 3;
      Serial.println("I2C connection confirmed");
      Serial.print("number of tries: ");
      Serial.println(error_counter);
      digitalWrite(LED2,HIGH);
      error_counter = 0;
      Serial.println();
      Serial.println("Beginning analog write test");
    }
  }

   //Analog Write Test
  if(step == 3){
    int analogValue = analogRead(analogInPin);
    //Serial.print("Received analog value: ");
    //Serial.println(analogValue); // Print the received value to the serial monitor
    delay(100); // Add a delay for stability
    if(substep==0){
      error_counter = error_counter + 1;
      if(analogValue>=1200 && analogValue<=2000){
        substep = 1;
        digitalWrite(ack, HIGH);
        Serial.println("Analog write test 1 successful");
        Serial.print("number of tries: ");
        Serial.println(error_counter);
        analogWrite(LED3,10);
        delay(500);
        error_counter = 0;
      }
    }
    if(substep==1){
      error_counter = error_counter + 1;
      if(analogValue>=500 && analogValue<=1000){
        substep = 2;
        digitalWrite(ack, LOW);
        Serial.println("Analog write test 2 successful");
        Serial.print("number of tries: ");
        Serial.println(error_counter);
        analogWrite(LED3,40);
        delay(500);
        error_counter = 0;
      }
    }
    if(substep==2){
      error_counter = error_counter + 1;
      if(analogValue>=500 && analogValue<=1000){
        substep = 0;
        digitalWrite(ack, HIGH);
        Serial.println("Analog write test 3 successful");
        Serial.print("number of tries: ");
        Serial.println(error_counter);
        step = 4;
        delay(1000);
        digitalWrite(ack, LOW);
        analogWrite(LED3,60);
        Serial.println("Full analog write test successful");
        delay(500);
        Serial.println();
        Serial.println("Full test suite complete. You may remove test subject");
        error_counter = 0;
      }
    }
    if(error_counter == 100){
      Serial.println("Analog write test failed, exiting test");
      step = 4;
    }
  }
}
