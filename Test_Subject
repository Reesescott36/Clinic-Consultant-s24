#include "Wire.h"
#define I2C_DEV_ADDR 0x55
  
uint32_t i = 0;

void onRequest(){
  Wire.print(i++);
  Wire.print(" Packets.");
  Serial.println("onRequest");
}

void onReceive(int len){
  Serial.println("I2C recieve confirmed");
  Serial.printf("onReceive[%d]: ", len);
  while(Wire.available()){
    Serial.write(Wire.read());
  }
  Serial.println();
}


int RX2 = 16;
int TX2 = 17;
int analogInPin = 36;
int dac = 25;

int ack = 23;
int step;
int substep;
char data_rcvd = '0';

String i2c_message;
void setup() {
  Serial.begin(115200);
  Serial1.begin(115200, SERIAL_8N1, RX2, TX2);
  step = 0;
  substep = 0;
  pinMode(ack,INPUT);
  Serial.println("Testing Subject Started");
}

void loop() {
  if(Serial1.available()>0){
    //Serial.print("Serial1 available");
    data_rcvd = Serial1.read();
  }

  //UART Test
  if(data_rcvd == '1' && step == 0){
    Serial.println("UART data recieved, sending confirmation");
    Serial1.write('a');
    step = 1;
  }

  //Analog Read Test
  if(step == 1){
    int analogValue = analogRead(analogInPin);
    Serial.print("Received analog value: ");
    Serial.println(analogValue); // Print the received value to the serial monitor
    delay(100); // Add a delay for stability
    if(substep==0){
      if(analogValue>=1200 && analogValue<=2000){
        substep = 1;
        Serial1.write('b');
      }
    }
    if(substep==1){
      if(analogValue>=500 && analogValue<=1000){
        substep = 2;
        Serial1.write('c');
      }
    }
    if(substep==2){
      if(analogValue>=3000){
        step = 2;
        Serial1.write('d');
        substep = 0;
      }
    }
  }




  //I2C Test
  if(step==2){
    Wire.onReceive(onReceive);
    Wire.onRequest(onRequest);
    Wire.begin((uint8_t)I2C_DEV_ADDR);
    #if CONFIG_IDF_TARGET_ESP32
      char message[64];
      snprintf(message, 64, "%u Packets.", i++);
      Wire.slaveWrite((uint8_t *)message, strlen(message));
      step = 3;
    #endif
  }

  //Analog Write Test
  if(step == 3){
    if(substep == 0){
      dacWrite(dac,128);
      delay(500);
      if(digitalRead(ack)==1){
        substep = 1;
      }
    }
    if(substep == 1){
      dacWrite(dac,64);
      delay(500);
      if(digitalRead(ack)==0){
        substep = 2;
      }
    }
    if(substep == 2){
      dacWrite(dac,64);
      delay(500);
      if(digitalRead(ack)==1){
        substep = 0;
        step = 4;
        dacWrite(dac,0);
        Serial.println("Analog write test complete");
      }
    }
  }



}
